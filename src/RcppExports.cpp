// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// make
Rcpp::XPtr<arma::Mat<short>> make(int i, int j);
RcppExport SEXP _xptrpkgs_make(SEXP iSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(make(i, j));
    return rcpp_result_gen;
END_RCPP
}
// release
void release(Rcpp::XPtr<arma::Mat<short>>& p);
RcppExport SEXP _xptrpkgs_release(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<arma::Mat<short>>& >::type p(pSEXP);
    release(p);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_xptrpkgs_make", (DL_FUNC) &_xptrpkgs_make, 2},
    {"_xptrpkgs_release", (DL_FUNC) &_xptrpkgs_release, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_xptrpkgs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
